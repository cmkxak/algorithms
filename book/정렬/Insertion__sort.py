#삽입정렬 - (오름차순) 구현
nums=[42,32,24,60,40]

#최적화 전
for i in range(1, len(nums)):
    for j in range(i,0,-1): # 인덱스 지점부터 처음 지점 까지 모든 원소를 비교
        if nums[j-1] > nums[j]:
            nums[j-1],nums[j] = nums[j], nums[j-1]
print(nums)

#최적화 후
#기존에 있던 값들은 이전 패스에서 모두 정렬되었다는 점을 활용하면 불필요한 비교 작업을 제거할 수 있습니다.
# 예를 들면, 기존 정렬 범위 [1,2,3,5]에 4가 추가된다고 가정해 봅시다.이 때, 5는 4보다 크기 때문에 swap이 필요하지만,
# 나머지 1,2,3은 4보다 작기 때문에 swap이 필요 없습니다.
# 그리고 3보다 앞에 있는 숫자들은 이미 정렬을 해두었기 때문에 당연히 3보다 작을 것이고, 4를 활용하여 앞 부분을 비교하는 것은
# 무의미한 비교가 될 것 입니다. 이 사실을 이용하면, 새롭게 추가 된 값보다 작은 값을 만날 때 까지만 반복을 설정할 수 있습니다.

for i in range(1, len(nums)):
    while i>0 and nums[i-1] > nums[i]:
        nums[i-1],nums[i] = nums[i],nums[i-1]
        i-=1 #범위를 좁히면서 앞으로 이동해야 하므로
print(nums)
